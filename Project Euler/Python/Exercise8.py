# The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
#
# 73167176531330624919225119674426574742355349194934
# 96983520312774506326239578318016984801869478851843
# 85861560789112949495459501737958331952853208805511
# 12540698747158523863050715693290963295227443043557
# 66896648950445244523161731856403098711121722383113
# 62229893423380308135336276614282806444486645238749
# 30358907296290491560440772390713810515859307960866
# 70172427121883998797908792274921901699720888093776
# 65727333001053367881220235421809751254540594752243
# 52584907711670556013604839586446706324415722155397
# 53697817977846174064955149290862569321978468622482
# 83972241375657056057490261407972968652414535100474
# 82166370484403199890008895243450658541227588666881
# 16427171479924442928230863465674813919123162824586
# 17866458359124566529476545682848912883142607690042
# 24219022671055626321111109370544217506941658960408
# 07198403850962455444362981230987879927244284909188
# 84580156166097919133875499200524063689912560717606
# 05886116467109405077541002256983155200055935729725
# 71636269561882670428252483600823257530420752963450
#
# Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?


num = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438" \
      "586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966" \
      "489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296" \
      "2904915604407723907138105158593079608667017242712188399879790879227492190169972088809377665727333001053367" \
      "8812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955" \
      "1492908625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890008895243" \
      "4506585412275886668811642717147992444292823086346567481391912316282458617866458359124566529476545682848912" \
      "8831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244" \
      "2849091888458015616609791913387549920052406368991256071760605886116467109405077541002256983155200055935729" \
      "72571636269561882670428252483600823257530420752963450"

res = 1
finalres = 0
maxsize = len(num)
for i in range(1, maxsize):
    if i > 988:
        print(i)
        break
    if res > finalres:
        finalres = res
        print(i)
    res = 1
    for j in range(i, i + 13):
        char = num[j - 1]
        res *= int(char)
print(finalres)

#23514624000
#You are the 235945th person to have solved this problem.


